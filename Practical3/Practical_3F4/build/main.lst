ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include <math.h>
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** typedef struct {
  31:Core/Src/main.c ****     uint16_t width;
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 2


  32:Core/Src/main.c ****     uint16_t height;
  33:Core/Src/main.c ****     uint32_t exec_time_ms;
  34:Core/Src/main.c ****     uint64_t checksum;
  35:Core/Src/main.c **** } Task1Result;
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** #define MAX_ITER   100
  41:Core/Src/main.c **** #define SCALE      1000000
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** // Performance timing variables
  53:Core/Src/main.c **** static const uint16_t test_sizes[][2] = {
  54:Core/Src/main.c ****     {128, 128}, {160, 160}, {192, 192}, {224, 224}, {256, 256}
  55:Core/Src/main.c **** };
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** // Per-size results for each kernel
  58:Core/Src/main.c **** volatile Task1Result task1_fixed[5];
  59:Core/Src/main.c **** volatile Task1Result task1_double[5];
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** // Handy live variables to watch
  62:Core/Src/main.c **** volatile uint32_t start_time = 0, end_time = 0;
  63:Core/Src/main.c **** volatile uint16_t current_width  = 0;
  64:Core/Src/main.c **** volatile uint16_t current_height = 0;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** volatile uint64_t checksum_fixed   = 0;
  67:Core/Src/main.c **** volatile uint32_t exec_time_fixed  = 0;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** volatile uint64_t checksum_double  = 0;
  70:Core/Src/main.c **** volatile uint32_t exec_time_double = 0;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** volatile uint64_t current_checksum = 0;
  73:Core/Src/main.c **** volatile uint32_t current_exec_time = 0;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** // Progress: 0..9 (5 sizes Ã— 2 kernels)
  76:Core/Src/main.c **** volatile uint32_t progress = 0;
  77:Core/Src/main.c **** /* USER CODE END PV */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  80:Core/Src/main.c **** void SystemClock_Config(void);
  81:Core/Src/main.c **** static void MX_GPIO_Init(void);
  82:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** // Mandelbrot function prototypes
  85:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  86:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END PFP */
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  91:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END 0 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /**
  96:Core/Src/main.c ****   * @brief  The application entry point.
  97:Core/Src/main.c ****   * @retval int
  98:Core/Src/main.c ****   */
  99:Core/Src/main.c **** int main(void)
 100:Core/Src/main.c **** {
 101:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END 1 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 108:Core/Src/main.c ****   HAL_Init();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END Init */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Configure the system clock */
 115:Core/Src/main.c ****   SystemClock_Config();
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END SysInit */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Initialize all configured peripherals */
 122:Core/Src/main.c ****   MX_GPIO_Init();
 123:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Infinite loop */
 128:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 129:Core/Src/main.c ****   while (1)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     /* USER CODE END WHILE */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 134:Core/Src/main.c ****     static uint8_t done = 0;
 135:Core/Src/main.c ****     if (!done){
 136:Core/Src/main.c ****       // Visual indicator: Turn on LED0 to signal processing start
 137:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****       // Benchmark and Profile Performance for both implementations
 140:Core/Src/main.c ****       for (int i = 0; i < 5; i++) {
 141:Core/Src/main.c ****         current_width = test_sizes[i][0];
 142:Core/Src/main.c ****         current_height = test_sizes[i][1];
 143:Core/Src/main.c ****         
 144:Core/Src/main.c ****         // Fixed-point arithmetic implementation
 145:Core/Src/main.c ****         start_time = HAL_GetTick();
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 4


 146:Core/Src/main.c ****         checksum_fixed = calculate_mandelbrot_fixed_point_arithmetic(current_width, current_height,
 147:Core/Src/main.c ****         end_time = HAL_GetTick();
 148:Core/Src/main.c ****         exec_time_fixed = end_time - start_time;
 149:Core/Src/main.c ****         
 150:Core/Src/main.c ****         task1_fixed[i].width = current_width;
 151:Core/Src/main.c ****         task1_fixed[i].height = current_height;
 152:Core/Src/main.c ****         task1_fixed[i].exec_time_ms = exec_time_fixed;
 153:Core/Src/main.c ****         task1_fixed[i].checksum = checksum_fixed;
 154:Core/Src/main.c ****         
 155:Core/Src/main.c ****         progress++;
 156:Core/Src/main.c ****         
 157:Core/Src/main.c ****         // Double implementation
 158:Core/Src/main.c ****         start_time = HAL_GetTick();
 159:Core/Src/main.c ****         checksum_double = calculate_mandelbrot_double(current_width, current_height, MAX_ITER);
 160:Core/Src/main.c ****         end_time = HAL_GetTick();
 161:Core/Src/main.c ****         exec_time_double = end_time - start_time;
 162:Core/Src/main.c ****         
 163:Core/Src/main.c ****         task1_double[i].width = current_width;
 164:Core/Src/main.c ****         task1_double[i].height = current_height;
 165:Core/Src/main.c ****         task1_double[i].exec_time_ms = exec_time_double;
 166:Core/Src/main.c ****         task1_double[i].checksum = checksum_double;
 167:Core/Src/main.c ****         
 168:Core/Src/main.c ****         progress++;
 169:Core/Src/main.c ****       }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****       // Visual indicator: Turn on LED1 to signal processing completion
 172:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****       // Keep the LEDs ON for 2s
 175:Core/Src/main.c ****       HAL_Delay(2000);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****       // Turn OFF LEDs
 178:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 179:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****       done = 1;
 182:Core/Src/main.c ****     }
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c ****   /* USER CODE END 3 */
 185:Core/Src/main.c **** }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief System Clock Configuration
 189:Core/Src/main.c ****   * @retval None
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c **** void SystemClock_Config(void)
 192:Core/Src/main.c **** {
 193:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 194:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 199:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 202:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 5


 203:Core/Src/main.c ****   */
 204:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 205:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 211:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 212:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 213:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****     Error_Handler();
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 221:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 222:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 223:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 224:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 225:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 228:Core/Src/main.c ****   {
 229:Core/Src/main.c ****     Error_Handler();
 230:Core/Src/main.c ****   }
 231:Core/Src/main.c **** }
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /**
 234:Core/Src/main.c ****   * @brief GPIO Initialization Function
 235:Core/Src/main.c ****   * @param None
 236:Core/Src/main.c ****   * @retval None
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c **** static void MX_GPIO_Init(void)
 239:Core/Src/main.c **** {
  28              		.loc 1 239 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 240:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 240 3 view .LVU1
  42              		.loc 1 240 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 6


  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 241:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 246:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 246 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 246 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 246 3 view .LVU5
  54 0012 184B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 246 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 246 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 246 3 view .LVU8
 247:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 247 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 247 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 247 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 247 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 247 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 247 3 view .LVU14
 248:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 248 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 248 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 248 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00202 		orr	r2, r2, #2
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 248 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00203 		and	r3, r3, #2
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 248 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 7


  96              	.LBE6:
  97              		.loc 1 248 3 view .LVU20
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 251:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  98              		.loc 1 251 3 view .LVU21
  99 004e 0A4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 FF21     		movs	r1, #255
 102 0054 2846     		mov	r0, r5
 103 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 252:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 255:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 256:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 105              		.loc 1 256 3 view .LVU22
 106              		.loc 1 256 23 is_stmt 0 view .LVU23
 107 005a FF23     		movs	r3, #255
 108 005c 0393     		str	r3, [sp, #12]
 257:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 258:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 258 3 is_stmt 1 view .LVU24
 110              		.loc 1 258 24 is_stmt 0 view .LVU25
 111 005e 0123     		movs	r3, #1
 112 0060 0493     		str	r3, [sp, #16]
 259:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 259 3 is_stmt 1 view .LVU26
 114              		.loc 1 259 24 is_stmt 0 view .LVU27
 115 0062 0594     		str	r4, [sp, #20]
 260:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 260 3 is_stmt 1 view .LVU28
 117              		.loc 1 260 25 is_stmt 0 view .LVU29
 118 0064 0694     		str	r4, [sp, #24]
 261:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 261 3 is_stmt 1 view .LVU30
 120 0066 03A9     		add	r1, sp, #12
 121 0068 2846     		mov	r0, r5
 122 006a FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 266:Core/Src/main.c **** }
 124              		.loc 1 266 1 is_stmt 0 view .LVU31
 125 006e 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
 128              		@ sp needed
 129 0070 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0072 00BF     		.align	2
 132              	.L3:
 133 0074 00380240 		.word	1073887232
 134 0078 00040240 		.word	1073873920
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 8


 135              		.cfi_endproc
 136              	.LFE136:
 138              		.global	__aeabi_ldivmod
 139              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 140              		.align	1
 141              		.global	calculate_mandelbrot_fixed_point_arithmetic
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	calculate_mandelbrot_fixed_point_arithmetic:
 147              	.LVL2:
 148              	.LFB137:
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 269:Core/Src/main.c **** // Mandelbrot implementations
 270:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 149              		.loc 1 270 96 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 48
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 270 96 is_stmt 0 view .LVU33
 154 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 155              	.LCFI3:
 156              		.cfi_def_cfa_offset 36
 157              		.cfi_offset 4, -36
 158              		.cfi_offset 5, -32
 159              		.cfi_offset 6, -28
 160              		.cfi_offset 7, -24
 161              		.cfi_offset 8, -20
 162              		.cfi_offset 9, -16
 163              		.cfi_offset 10, -12
 164              		.cfi_offset 11, -8
 165              		.cfi_offset 14, -4
 166 0004 8DB0     		sub	sp, sp, #52
 167              	.LCFI4:
 168              		.cfi_def_cfa_offset 88
 169 0006 0546     		mov	r5, r0
 170 0008 0B91     		str	r1, [sp, #44]
 171 000a 0392     		str	r2, [sp, #12]
 271:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 172              		.loc 1 271 3 is_stmt 1 view .LVU34
 173              	.LVL3:
 272:Core/Src/main.c ****     for (int y = 0; y < height; y++){
 174              		.loc 1 272 5 view .LVU35
 175              	.LBB7:
 176              		.loc 1 272 10 view .LVU36
 177              		.loc 1 272 14 is_stmt 0 view .LVU37
 178 000c 0026     		movs	r6, #0
 179              	.LBE7:
 271:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 180              		.loc 1 271 12 view .LVU38
 181 000e 0696     		str	r6, [sp, #24]
 182 0010 B246     		mov	r10, r6
 183 0012 0796     		str	r6, [sp, #28]
 184              	.LBB14:
 185              		.loc 1 272 5 view .LVU39
 186 0014 8EE0     		b	.L6
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 9


 187              	.LVL4:
 188              	.L14:
 189              	.LBB8:
 190              	.LBB9:
 191              	.LBB10:
 273:Core/Src/main.c ****       for(int x = 0; x < width; x++){
 274:Core/Src/main.c ****         int32_t x0 = ((int64_t)x *3500000)/width-2500000;
 275:Core/Src/main.c ****         int32_t y0 = ((int64_t)y *2000000)/height-1000000;
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****         int32_t xi = 0, yi = 0;
 278:Core/Src/main.c ****         int iterations = 0;
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****         while(iterations < max_iterations){
 281:Core/Src/main.c ****           int64_t xi2 = ((int64_t)xi * xi) / SCALE;
 282:Core/Src/main.c ****           int64_t yi2 = ((int64_t)yi * yi) / SCALE;
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****           if(xi2 + yi2 > 4000000) break;
 285:Core/Src/main.c ****           int32_t temp = xi2 - yi2;
 192              		.loc 1 285 11 is_stmt 1 view .LVU40
 193              		.loc 1 285 30 is_stmt 0 view .LVU41
 194 0016 A8EB0008 		sub	r8, r8, r0
 195              	.LVL5:
 286:Core/Src/main.c ****           yi = (2 * (int64_t)xi * yi) / SCALE + y0;
 196              		.loc 1 286 11 is_stmt 1 view .LVU42
 197              		.loc 1 286 33 is_stmt 0 view .LVU43
 198 001a 04FB07F1 		mul	r1, r4, r7
 199 001e 0AFB0B11 		mla	r1, r10, fp, r1
 200 0022 A4FB0A05 		umull	r0, r5, r4, r10
 201              		.loc 1 286 39 view .LVU44
 202 0026 4A4A     		ldr	r2, .L17
 203 0028 0023     		movs	r3, #0
 204 002a 2944     		add	r1, r1, r5
 205 002c FFF7FEFF 		bl	__aeabi_ldivmod
 206              	.LVL6:
 207              		.loc 1 286 47 view .LVU45
 208 0030 059B     		ldr	r3, [sp, #20]
 209 0032 03EB000A 		add	r10, r3, r0
 210              	.LVL7:
 287:Core/Src/main.c ****           xi = temp + x0;
 211              		.loc 1 287 11 is_stmt 1 view .LVU46
 212              		.loc 1 287 14 is_stmt 0 view .LVU47
 213 0036 049B     		ldr	r3, [sp, #16]
 214 0038 03EB0804 		add	r4, r3, r8
 215              	.LVL8:
 288:Core/Src/main.c ****           iterations++;
 216              		.loc 1 288 11 is_stmt 1 view .LVU48
 217              		.loc 1 288 21 is_stmt 0 view .LVU49
 218 003c 09F10109 		add	r9, r9, #1
 219              	.LVL9:
 220              	.L7:
 221              		.loc 1 288 21 view .LVU50
 222              	.LBE10:
 280:Core/Src/main.c ****           int64_t xi2 = ((int64_t)xi * xi) / SCALE;
 223              		.loc 1 280 26 is_stmt 1 view .LVU51
 224 0040 039B     		ldr	r3, [sp, #12]
 225 0042 9945     		cmp	r9, r3
 226 0044 25DA     		bge	.L8
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 10


 227              	.LBB11:
 281:Core/Src/main.c ****           int64_t yi2 = ((int64_t)yi * yi) / SCALE;
 228              		.loc 1 281 11 view .LVU52
 281:Core/Src/main.c ****           int64_t yi2 = ((int64_t)yi * yi) / SCALE;
 229              		.loc 1 281 26 is_stmt 0 view .LVU53
 230 0046 4FEAE47B 		asr	fp, r4, #31
 281:Core/Src/main.c ****           int64_t yi2 = ((int64_t)yi * yi) / SCALE;
 231              		.loc 1 281 38 view .LVU54
 232 004a 04FB0BF5 		mul	r5, r4, fp
 233 004e A4FB0401 		umull	r0, r1, r4, r4
 281:Core/Src/main.c ****           int64_t yi2 = ((int64_t)yi * yi) / SCALE;
 234              		.loc 1 281 19 view .LVU55
 235 0052 404A     		ldr	r2, .L17+4
 236 0054 0023     		movs	r3, #0
 237 0056 01EB4501 		add	r1, r1, r5, lsl #1
 238 005a FFF7FEFF 		bl	__aeabi_ldivmod
 239              	.LVL10:
 240 005e 8046     		mov	r8, r0
 241 0060 0291     		str	r1, [sp, #8]
 242 0062 0190     		str	r0, [sp, #4]
 243              	.LVL11:
 282:Core/Src/main.c **** 
 244              		.loc 1 282 11 is_stmt 1 view .LVU56
 282:Core/Src/main.c **** 
 245              		.loc 1 282 26 is_stmt 0 view .LVU57
 246 0064 4FEAEA77 		asr	r7, r10, #31
 282:Core/Src/main.c **** 
 247              		.loc 1 282 38 view .LVU58
 248 0068 0AFB07FC 		mul	ip, r10, r7
 249 006c AAFB0A01 		umull	r0, r1, r10, r10
 250              	.LVL12:
 282:Core/Src/main.c **** 
 251              		.loc 1 282 19 view .LVU59
 252 0070 384A     		ldr	r2, .L17+4
 253 0072 0023     		movs	r3, #0
 254 0074 01EB4C01 		add	r1, r1, ip, lsl #1
 255 0078 FFF7FEFF 		bl	__aeabi_ldivmod
 256              	.LVL13:
 284:Core/Src/main.c ****           int32_t temp = xi2 - yi2;
 257              		.loc 1 284 11 is_stmt 1 view .LVU60
 284:Core/Src/main.c ****           int32_t temp = xi2 - yi2;
 258              		.loc 1 284 18 is_stmt 0 view .LVU61
 259 007c 4346     		mov	r3, r8
 260 007e 1B18     		adds	r3, r3, r0
 261 0080 029A     		ldr	r2, [sp, #8]
 262 0082 42EB0101 		adc	r1, r2, r1
 263              	.LVL14:
 284:Core/Src/main.c ****           int32_t temp = xi2 - yi2;
 264              		.loc 1 284 13 view .LVU62
 265 0086 344A     		ldr	r2, .L17+8
 266 0088 9A42     		cmp	r2, r3
 267 008a 4FF00003 		mov	r3, #0
 268 008e 8B41     		sbcs	r3, r3, r1
 269 0090 C1DA     		bge	.L14
 270              	.LVL15:
 271              	.L8:
 284:Core/Src/main.c ****           int32_t temp = xi2 - yi2;
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 11


 272              		.loc 1 284 13 view .LVU63
 273              	.LBE11:
 289:Core/Src/main.c ****         }
 290:Core/Src/main.c ****         mandelbrot_sum += iterations;
 274              		.loc 1 290 24 view .LVU64
 275 0092 DDF820B0 		ldr	fp, [sp, #32]
 276 0096 099E     		ldr	r6, [sp, #36]
 277              	.LVL16:
 278              		.loc 1 290 24 view .LVU65
 279 0098 0A9D     		ldr	r5, [sp, #40]
 280              		.loc 1 290 9 is_stmt 1 view .LVU66
 281              		.loc 1 290 24 is_stmt 0 view .LVU67
 282 009a 069B     		ldr	r3, [sp, #24]
 283 009c 19EB0302 		adds	r2, r9, r3
 284 00a0 0692     		str	r2, [sp, #24]
 285              	.LVL17:
 286              		.loc 1 290 24 view .LVU68
 287 00a2 079B     		ldr	r3, [sp, #28]
 288 00a4 43EBE973 		adc	r3, r3, r9, asr #31
 289 00a8 0793     		str	r3, [sp, #28]
 290              	.LVL18:
 291              		.loc 1 290 24 view .LVU69
 292              	.LBE9:
 273:Core/Src/main.c ****         int32_t x0 = ((int64_t)x *3500000)/width-2500000;
 293              		.loc 1 273 34 is_stmt 1 discriminator 2 view .LVU70
 294 00aa 0136     		adds	r6, r6, #1
 295              	.LVL19:
 296              	.L11:
 273:Core/Src/main.c ****         int32_t x0 = ((int64_t)x *3500000)/width-2500000;
 297              		.loc 1 273 24 discriminator 1 view .LVU71
 298 00ac AE42     		cmp	r6, r5
 299 00ae 3FDA     		bge	.L15
 300              	.LBB12:
 274:Core/Src/main.c ****         int32_t y0 = ((int64_t)y *2000000)/height-1000000;
 301              		.loc 1 274 9 view .LVU72
 274:Core/Src/main.c ****         int32_t y0 = ((int64_t)y *2000000)/height-1000000;
 302              		.loc 1 274 23 is_stmt 0 view .LVU73
 303 00b0 F717     		asrs	r7, r6, #31
 274:Core/Src/main.c ****         int32_t y0 = ((int64_t)y *2000000)/height-1000000;
 304              		.loc 1 274 34 view .LVU74
 305 00b2 2A49     		ldr	r1, .L17+12
 306 00b4 0024     		movs	r4, #0
 307 00b6 A6FB010C 		umull	r0, ip, r6, r1
 274:Core/Src/main.c ****         int32_t y0 = ((int64_t)y *2000000)/height-1000000;
 308              		.loc 1 274 43 view .LVU75
 309 00ba 2A46     		mov	r2, r5
 310 00bc EB17     		asrs	r3, r5, #31
 311 00be 01FB07C1 		mla	r1, r1, r7, ip
 312 00c2 FFF7FEFF 		bl	__aeabi_ldivmod
 313              	.LVL20:
 274:Core/Src/main.c ****         int32_t y0 = ((int64_t)y *2000000)/height-1000000;
 314              		.loc 1 274 49 view .LVU76
 315 00c6 A0F51813 		sub	r3, r0, #2490368
 316 00ca A3F51653 		sub	r3, r3, #9600
 317 00ce 203B     		subs	r3, r3, #32
 318 00d0 0493     		str	r3, [sp, #16]
 319              	.LVL21:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 12


 275:Core/Src/main.c **** 
 320              		.loc 1 275 9 is_stmt 1 view .LVU77
 275:Core/Src/main.c **** 
 321              		.loc 1 275 23 is_stmt 0 view .LVU78
 322 00d2 4FEAEB71 		asr	r1, fp, #31
 275:Core/Src/main.c **** 
 323              		.loc 1 275 34 view .LVU79
 324 00d6 4B01     		lsls	r3, r1, #5
 325              	.LVL22:
 275:Core/Src/main.c **** 
 326              		.loc 1 275 34 view .LVU80
 327 00d8 43EADB63 		orr	r3, r3, fp, lsr #27
 328 00dc 4FEA4B10 		lsl	r0, fp, #5
 329 00e0 B0EB0B00 		subs	r0, r0, fp
 330 00e4 63EB0107 		sbc	r7, r3, r1
 331 00e8 BB01     		lsls	r3, r7, #6
 332 00ea 43EA9063 		orr	r3, r3, r0, lsr #26
 333 00ee 8201     		lsls	r2, r0, #6
 334 00f0 121A     		subs	r2, r2, r0
 335 00f2 63EB0703 		sbc	r3, r3, r7
 336 00f6 DB00     		lsls	r3, r3, #3
 337 00f8 43EA5273 		orr	r3, r3, r2, lsr #29
 338 00fc D200     		lsls	r2, r2, #3
 339 00fe 12EB0B07 		adds	r7, r2, fp
 340 0102 41EB0301 		adc	r1, r1, r3
 341 0106 C901     		lsls	r1, r1, #7
 275:Core/Src/main.c **** 
 342              		.loc 1 275 43 view .LVU81
 343 0108 0B9B     		ldr	r3, [sp, #44]
 344 010a 1A46     		mov	r2, r3
 345 010c DB17     		asrs	r3, r3, #31
 346 010e F801     		lsls	r0, r7, #7
 347 0110 41EA5761 		orr	r1, r1, r7, lsr #25
 348 0114 FFF7FEFF 		bl	__aeabi_ldivmod
 349              	.LVL23:
 275:Core/Src/main.c **** 
 350              		.loc 1 275 50 view .LVU82
 351 0118 A0F57422 		sub	r2, r0, #999424
 352 011c A2F51072 		sub	r2, r2, #576
 353              	.LVL24:
 277:Core/Src/main.c ****         int iterations = 0;
 354              		.loc 1 277 9 is_stmt 1 view .LVU83
 278:Core/Src/main.c **** 
 355              		.loc 1 278 9 view .LVU84
 280:Core/Src/main.c ****           int64_t xi2 = ((int64_t)xi * xi) / SCALE;
 356              		.loc 1 280 9 view .LVU85
 278:Core/Src/main.c **** 
 357              		.loc 1 278 13 is_stmt 0 view .LVU86
 358 0120 A146     		mov	r9, r4
 277:Core/Src/main.c ****         int iterations = 0;
 359              		.loc 1 277 25 view .LVU87
 360 0122 A246     		mov	r10, r4
 361 0124 0592     		str	r2, [sp, #20]
 362 0126 CDF820B0 		str	fp, [sp, #32]
 363 012a 0996     		str	r6, [sp, #36]
 364 012c 0A95     		str	r5, [sp, #40]
 280:Core/Src/main.c ****           int64_t xi2 = ((int64_t)xi * xi) / SCALE;
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 13


 365              		.loc 1 280 14 view .LVU88
 366 012e 87E7     		b	.L7
 367              	.LVL25:
 368              	.L15:
 280:Core/Src/main.c ****           int64_t xi2 = ((int64_t)xi * xi) / SCALE;
 369              		.loc 1 280 14 view .LVU89
 370              	.LBE12:
 371              	.LBE8:
 272:Core/Src/main.c ****       for(int x = 0; x < width; x++){
 372              		.loc 1 272 34 is_stmt 1 discriminator 2 view .LVU90
 373 0130 0BF1010A 		add	r10, fp, #1
 374              	.LVL26:
 375              	.L6:
 272:Core/Src/main.c ****       for(int x = 0; x < width; x++){
 376              		.loc 1 272 23 discriminator 1 view .LVU91
 377 0134 0B9B     		ldr	r3, [sp, #44]
 378 0136 9A45     		cmp	r10, r3
 379 0138 02DA     		bge	.L16
 380              	.LBB13:
 273:Core/Src/main.c ****         int32_t x0 = ((int64_t)x *3500000)/width-2500000;
 381              		.loc 1 273 15 is_stmt 0 view .LVU92
 382 013a 0026     		movs	r6, #0
 383 013c D346     		mov	fp, r10
 384 013e B5E7     		b	.L11
 385              	.L16:
 273:Core/Src/main.c ****         int32_t x0 = ((int64_t)x *3500000)/width-2500000;
 386              		.loc 1 273 15 view .LVU93
 387              	.LBE13:
 388              	.LBE14:
 291:Core/Src/main.c ****       }
 292:Core/Src/main.c ****     }
 293:Core/Src/main.c ****     return mandelbrot_sum;
 294:Core/Src/main.c **** }
 389              		.loc 1 294 1 view .LVU94
 390 0140 DDF81CB0 		ldr	fp, [sp, #28]
 293:Core/Src/main.c **** }
 391              		.loc 1 293 5 is_stmt 1 view .LVU95
 392              		.loc 1 294 1 is_stmt 0 view .LVU96
 393 0144 0698     		ldr	r0, [sp, #24]
 394 0146 5946     		mov	r1, fp
 395 0148 0DB0     		add	sp, sp, #52
 396              	.LCFI5:
 397              		.cfi_def_cfa_offset 36
 398              		@ sp needed
 399 014a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 400              	.LVL27:
 401              	.L18:
 402              		.loc 1 294 1 view .LVU97
 403 014e 00BF     		.align	2
 404              	.L17:
 405 0150 20A10700 		.word	500000
 406 0154 40420F00 		.word	1000000
 407 0158 00093D00 		.word	4000000
 408 015c E0673500 		.word	3500000
 409              		.cfi_endproc
 410              	.LFE137:
 412              		.global	__aeabi_i2d
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 14


 413              		.global	__aeabi_ddiv
 414              		.global	__aeabi_dmul
 415              		.global	__aeabi_dsub
 416              		.global	__aeabi_dadd
 417              		.global	__aeabi_dcmple
 418              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 419              		.align	1
 420              		.global	calculate_mandelbrot_double
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	calculate_mandelbrot_double:
 426              	.LVL28:
 427              	.LFB138:
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 428              		.loc 1 296 80 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 56
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		.loc 1 296 80 is_stmt 0 view .LVU99
 433 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 434              	.LCFI6:
 435              		.cfi_def_cfa_offset 36
 436              		.cfi_offset 4, -36
 437              		.cfi_offset 5, -32
 438              		.cfi_offset 6, -28
 439              		.cfi_offset 7, -24
 440              		.cfi_offset 8, -20
 441              		.cfi_offset 9, -16
 442              		.cfi_offset 10, -12
 443              		.cfi_offset 11, -8
 444              		.cfi_offset 14, -4
 445 0004 8FB0     		sub	sp, sp, #60
 446              	.LCFI7:
 447              		.cfi_def_cfa_offset 96
 448 0006 0790     		str	r0, [sp, #28]
 449 0008 0C91     		str	r1, [sp, #48]
 450 000a 0D92     		str	r2, [sp, #52]
 297:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 451              		.loc 1 297 5 is_stmt 1 view .LVU100
 452              	.LVL29:
 298:Core/Src/main.c ****     for (int y = 0; y < height; y++){
 453              		.loc 1 298 5 view .LVU101
 454              	.LBB15:
 455              		.loc 1 298 10 view .LVU102
 456              		.loc 1 298 14 is_stmt 0 view .LVU103
 457 000c 4FF00008 		mov	r8, #0
 458              	.LBE15:
 297:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 459              		.loc 1 297 14 view .LVU104
 460 0010 CDF82080 		str	r8, [sp, #32]
 461 0014 CDF82480 		str	r8, [sp, #36]
 462              	.LBB21:
 463              		.loc 1 298 5 view .LVU105
 464 0018 8DE0     		b	.L20
 465              	.LVL30:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 15


 466              	.L23:
 467              	.LBB16:
 468              	.LBB17:
 469              	.LBB18:
 299:Core/Src/main.c ****       for(int x = 0; x < width; x++){
 300:Core/Src/main.c ****         double x0 = ((double)x/width)*3.5-2.5;
 301:Core/Src/main.c ****         double y0 = ((double)y/height)*2.0-1.0;
 302:Core/Src/main.c ****         double xi = 0.0, yi = 0.0;
 303:Core/Src/main.c ****         int iterations = 0;
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****         while(iterations < max_iterations && (xi * xi + yi * yi) <=4.0){
 306:Core/Src/main.c ****           double temp = (xi * xi- yi * yi);
 470              		.loc 1 306 11 is_stmt 1 view .LVU106
 471              		.loc 1 306 18 is_stmt 0 view .LVU107
 472 001a 5246     		mov	r2, r10
 473 001c 5B46     		mov	r3, fp
 474 001e DDE90001 		ldrd	r0, [sp]
 475 0022 FFF7FEFF 		bl	__aeabi_dsub
 476              	.LVL31:
 477 0026 8246     		mov	r10, r0
 478 0028 8B46     		mov	fp, r1
 479              	.LVL32:
 307:Core/Src/main.c ****           yi = 2.0* xi * yi + y0;
 480              		.loc 1 307 11 is_stmt 1 view .LVU108
 481              		.loc 1 307 19 is_stmt 0 view .LVU109
 482 002a 2246     		mov	r2, r4
 483 002c 2B46     		mov	r3, r5
 484 002e 2046     		mov	r0, r4
 485 0030 2946     		mov	r1, r5
 486 0032 FFF7FEFF 		bl	__aeabi_dadd
 487              	.LVL33:
 488              		.loc 1 307 24 view .LVU110
 489 0036 3246     		mov	r2, r6
 490 0038 3B46     		mov	r3, r7
 491 003a FFF7FEFF 		bl	__aeabi_dmul
 492              	.LVL34:
 493              		.loc 1 307 14 view .LVU111
 494 003e DDE90423 		ldrd	r2, [sp, #16]
 495 0042 FFF7FEFF 		bl	__aeabi_dadd
 496              	.LVL35:
 497 0046 0646     		mov	r6, r0
 498              	.LVL36:
 499              		.loc 1 307 14 view .LVU112
 500 0048 0F46     		mov	r7, r1
 501              	.LVL37:
 308:Core/Src/main.c ****           xi = temp + x0;
 502              		.loc 1 308 11 is_stmt 1 view .LVU113
 503              		.loc 1 308 14 is_stmt 0 view .LVU114
 504 004a 5246     		mov	r2, r10
 505 004c 5B46     		mov	r3, fp
 506 004e DDE90201 		ldrd	r0, [sp, #8]
 507 0052 FFF7FEFF 		bl	__aeabi_dadd
 508              	.LVL38:
 509 0056 0446     		mov	r4, r0
 510              	.LVL39:
 511              		.loc 1 308 14 view .LVU115
 512 0058 0D46     		mov	r5, r1
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 16


 513              	.LVL40:
 309:Core/Src/main.c ****           iterations++;
 514              		.loc 1 309 11 is_stmt 1 view .LVU116
 515              		.loc 1 309 21 is_stmt 0 view .LVU117
 516 005a 08F10108 		add	r8, r8, #1
 517              	.LVL41:
 518              	.L21:
 519              		.loc 1 309 21 view .LVU118
 520              	.LBE18:
 305:Core/Src/main.c ****           double temp = (xi * xi- yi * yi);
 521              		.loc 1 305 43 is_stmt 1 view .LVU119
 522 005e C845     		cmp	r8, r9
 523 0060 1BDA     		bge	.L22
 305:Core/Src/main.c ****           double temp = (xi * xi- yi * yi);
 524              		.loc 1 305 50 is_stmt 0 discriminator 1 view .LVU120
 525 0062 2246     		mov	r2, r4
 526 0064 2B46     		mov	r3, r5
 527 0066 2046     		mov	r0, r4
 528 0068 2946     		mov	r1, r5
 529 006a FFF7FEFF 		bl	__aeabi_dmul
 530              	.LVL42:
 531 006e CDE90001 		strd	r0, [sp]
 305:Core/Src/main.c ****           double temp = (xi * xi- yi * yi);
 532              		.loc 1 305 60 discriminator 1 view .LVU121
 533 0072 3246     		mov	r2, r6
 534 0074 3B46     		mov	r3, r7
 535 0076 3046     		mov	r0, r6
 536 0078 3946     		mov	r1, r7
 537 007a FFF7FEFF 		bl	__aeabi_dmul
 538              	.LVL43:
 539 007e 8246     		mov	r10, r0
 540 0080 8B46     		mov	fp, r1
 305:Core/Src/main.c ****           double temp = (xi * xi- yi * yi);
 541              		.loc 1 305 55 discriminator 1 view .LVU122
 542 0082 0246     		mov	r2, r0
 543 0084 0B46     		mov	r3, r1
 544 0086 DDE90001 		ldrd	r0, [sp]
 545 008a FFF7FEFF 		bl	__aeabi_dadd
 546              	.LVL44:
 305:Core/Src/main.c ****           double temp = (xi * xi- yi * yi);
 547              		.loc 1 305 43 discriminator 1 view .LVU123
 548 008e 0022     		movs	r2, #0
 549 0090 314B     		ldr	r3, .L30
 550 0092 FFF7FEFF 		bl	__aeabi_dcmple
 551              	.LVL45:
 552 0096 0028     		cmp	r0, #0
 553 0098 BFD1     		bne	.L23
 554              	.L22:
 310:Core/Src/main.c ****         }
 311:Core/Src/main.c ****         mandelbrot_sum += iterations;
 555              		.loc 1 311 24 view .LVU124
 556 009a DDF82890 		ldr	r9, [sp, #40]
 557              		.loc 1 311 9 is_stmt 1 view .LVU125
 558              		.loc 1 311 24 is_stmt 0 view .LVU126
 559 009e 089B     		ldr	r3, [sp, #32]
 560 00a0 18EB0302 		adds	r2, r8, r3
 561 00a4 0892     		str	r2, [sp, #32]
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 17


 562              	.LVL46:
 563              		.loc 1 311 24 view .LVU127
 564 00a6 099B     		ldr	r3, [sp, #36]
 565 00a8 43EBE873 		adc	r3, r3, r8, asr #31
 566 00ac 0993     		str	r3, [sp, #36]
 567              	.LVL47:
 568              		.loc 1 311 24 view .LVU128
 569              	.LBE17:
 299:Core/Src/main.c ****         double x0 = ((double)x/width)*3.5-2.5;
 570              		.loc 1 299 34 is_stmt 1 discriminator 2 view .LVU129
 571 00ae 09F10109 		add	r9, r9, #1
 572              	.LVL48:
 573              	.L25:
 299:Core/Src/main.c ****         double x0 = ((double)x/width)*3.5-2.5;
 574              		.loc 1 299 24 discriminator 1 view .LVU130
 575 00b2 079B     		ldr	r3, [sp, #28]
 576 00b4 9945     		cmp	r9, r3
 577 00b6 3ADA     		bge	.L28
 578              	.LBB19:
 300:Core/Src/main.c ****         double y0 = ((double)y/height)*2.0-1.0;
 579              		.loc 1 300 9 view .LVU131
 300:Core/Src/main.c ****         double y0 = ((double)y/height)*2.0-1.0;
 580              		.loc 1 300 22 is_stmt 0 view .LVU132
 581 00b8 4846     		mov	r0, r9
 582 00ba FFF7FEFF 		bl	__aeabi_i2d
 583              	.LVL49:
 584 00be 0446     		mov	r4, r0
 585 00c0 0D46     		mov	r5, r1
 300:Core/Src/main.c ****         double y0 = ((double)y/height)*2.0-1.0;
 586              		.loc 1 300 31 view .LVU133
 587 00c2 0798     		ldr	r0, [sp, #28]
 588 00c4 FFF7FEFF 		bl	__aeabi_i2d
 589              	.LVL50:
 590 00c8 0246     		mov	r2, r0
 591 00ca 0B46     		mov	r3, r1
 592 00cc 2046     		mov	r0, r4
 593 00ce 2946     		mov	r1, r5
 594 00d0 FFF7FEFF 		bl	__aeabi_ddiv
 595              	.LVL51:
 300:Core/Src/main.c ****         double y0 = ((double)y/height)*2.0-1.0;
 596              		.loc 1 300 38 view .LVU134
 597 00d4 0022     		movs	r2, #0
 598 00d6 214B     		ldr	r3, .L30+4
 599 00d8 FFF7FEFF 		bl	__aeabi_dmul
 600              	.LVL52:
 300:Core/Src/main.c ****         double y0 = ((double)y/height)*2.0-1.0;
 601              		.loc 1 300 16 view .LVU135
 602 00dc 0022     		movs	r2, #0
 603 00de 204B     		ldr	r3, .L30+8
 604 00e0 FFF7FEFF 		bl	__aeabi_dsub
 605              	.LVL53:
 606 00e4 CDE90201 		strd	r0, [sp, #8]
 607              	.LVL54:
 301:Core/Src/main.c ****         double xi = 0.0, yi = 0.0;
 608              		.loc 1 301 9 is_stmt 1 view .LVU136
 301:Core/Src/main.c ****         double xi = 0.0, yi = 0.0;
 609              		.loc 1 301 22 is_stmt 0 view .LVU137
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 18


 610 00e8 0B98     		ldr	r0, [sp, #44]
 611              	.LVL55:
 301:Core/Src/main.c ****         double xi = 0.0, yi = 0.0;
 612              		.loc 1 301 22 view .LVU138
 613 00ea FFF7FEFF 		bl	__aeabi_i2d
 614              	.LVL56:
 615 00ee 0446     		mov	r4, r0
 616 00f0 0D46     		mov	r5, r1
 301:Core/Src/main.c ****         double xi = 0.0, yi = 0.0;
 617              		.loc 1 301 31 view .LVU139
 618 00f2 0C98     		ldr	r0, [sp, #48]
 619 00f4 FFF7FEFF 		bl	__aeabi_i2d
 620              	.LVL57:
 621 00f8 0246     		mov	r2, r0
 622 00fa 0B46     		mov	r3, r1
 623 00fc 2046     		mov	r0, r4
 624 00fe 2946     		mov	r1, r5
 625 0100 FFF7FEFF 		bl	__aeabi_ddiv
 626              	.LVL58:
 627 0104 0246     		mov	r2, r0
 628 0106 0B46     		mov	r3, r1
 301:Core/Src/main.c ****         double xi = 0.0, yi = 0.0;
 629              		.loc 1 301 39 view .LVU140
 630 0108 FFF7FEFF 		bl	__aeabi_dadd
 631              	.LVL59:
 301:Core/Src/main.c ****         double xi = 0.0, yi = 0.0;
 632              		.loc 1 301 16 view .LVU141
 633 010c 0022     		movs	r2, #0
 634 010e 154B     		ldr	r3, .L30+12
 635 0110 FFF7FEFF 		bl	__aeabi_dsub
 636              	.LVL60:
 637 0114 CDE90401 		strd	r0, [sp, #16]
 638              	.LVL61:
 302:Core/Src/main.c ****         int iterations = 0;
 639              		.loc 1 302 9 is_stmt 1 view .LVU142
 303:Core/Src/main.c **** 
 640              		.loc 1 303 9 view .LVU143
 305:Core/Src/main.c ****           double temp = (xi * xi- yi * yi);
 641              		.loc 1 305 9 view .LVU144
 303:Core/Src/main.c **** 
 642              		.loc 1 303 13 is_stmt 0 view .LVU145
 643 0118 4FF00008 		mov	r8, #0
 302:Core/Src/main.c ****         int iterations = 0;
 644              		.loc 1 302 26 view .LVU146
 645 011c 0026     		movs	r6, #0
 646 011e 0027     		movs	r7, #0
 302:Core/Src/main.c ****         int iterations = 0;
 647              		.loc 1 302 16 view .LVU147
 648 0120 3446     		mov	r4, r6
 649 0122 3D46     		mov	r5, r7
 650 0124 CDF82890 		str	r9, [sp, #40]
 651 0128 DDF83490 		ldr	r9, [sp, #52]
 652              	.LVL62:
 305:Core/Src/main.c ****           double temp = (xi * xi- yi * yi);
 653              		.loc 1 305 14 view .LVU148
 654 012c 97E7     		b	.L21
 655              	.LVL63:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 19


 656              	.L28:
 305:Core/Src/main.c ****           double temp = (xi * xi- yi * yi);
 657              		.loc 1 305 14 view .LVU149
 658              	.LBE19:
 659              	.LBE16:
 298:Core/Src/main.c ****       for(int x = 0; x < width; x++){
 660              		.loc 1 298 34 discriminator 2 view .LVU150
 661 012e DDF82C80 		ldr	r8, [sp, #44]
 298:Core/Src/main.c ****       for(int x = 0; x < width; x++){
 662              		.loc 1 298 34 is_stmt 1 discriminator 2 view .LVU151
 663 0132 08F10108 		add	r8, r8, #1
 664              	.LVL64:
 665              	.L20:
 298:Core/Src/main.c ****       for(int x = 0; x < width; x++){
 666              		.loc 1 298 23 discriminator 1 view .LVU152
 667 0136 0C9B     		ldr	r3, [sp, #48]
 668 0138 9845     		cmp	r8, r3
 669 013a 05DA     		bge	.L29
 670              	.LBB20:
 299:Core/Src/main.c ****         double x0 = ((double)x/width)*3.5-2.5;
 671              		.loc 1 299 15 is_stmt 0 view .LVU153
 672 013c 4FF0000A 		mov	r10, #0
 673 0140 CDF82C80 		str	r8, [sp, #44]
 674 0144 D146     		mov	r9, r10
 675 0146 B4E7     		b	.L25
 676              	.L29:
 299:Core/Src/main.c ****         double x0 = ((double)x/width)*3.5-2.5;
 677              		.loc 1 299 15 view .LVU154
 678              	.LBE20:
 679              	.LBE21:
 312:Core/Src/main.c ****       }
 313:Core/Src/main.c ****     }
 314:Core/Src/main.c ****     return mandelbrot_sum;
 315:Core/Src/main.c **** }
 680              		.loc 1 315 1 view .LVU155
 681 0148 DDF82490 		ldr	r9, [sp, #36]
 314:Core/Src/main.c **** }
 682              		.loc 1 314 5 is_stmt 1 view .LVU156
 683              		.loc 1 315 1 is_stmt 0 view .LVU157
 684 014c 0898     		ldr	r0, [sp, #32]
 685 014e 4946     		mov	r1, r9
 686 0150 0FB0     		add	sp, sp, #60
 687              	.LCFI8:
 688              		.cfi_def_cfa_offset 36
 689              		@ sp needed
 690 0152 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 691              	.LVL65:
 692              	.L31:
 693              		.loc 1 315 1 view .LVU158
 694 0156 00BF     		.align	2
 695              	.L30:
 696 0158 00001040 		.word	1074790400
 697 015c 00000C40 		.word	1074528256
 698 0160 00000440 		.word	1074003968
 699 0164 0000F03F 		.word	1072693248
 700              		.cfi_endproc
 701              	.LFE138:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 20


 703              		.section	.text.Error_Handler,"ax",%progbits
 704              		.align	1
 705              		.global	Error_Handler
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 710              	Error_Handler:
 711              	.LFB139:
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /* USER CODE END 4 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /**
 320:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 321:Core/Src/main.c ****   * @retval None
 322:Core/Src/main.c ****   */
 323:Core/Src/main.c **** void Error_Handler(void)
 324:Core/Src/main.c **** {
 712              		.loc 1 324 1 is_stmt 1 view -0
 713              		.cfi_startproc
 714              		@ Volatile: function does not return.
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 325:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 326:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 327:Core/Src/main.c ****   __disable_irq();
 718              		.loc 1 327 3 view .LVU160
 719              	.LBB22:
 720              	.LBI22:
 721              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 21


  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 22


  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 23


 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 24


 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 25


 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 26


 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 27


 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 28


 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 29


 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 30


 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 31


 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 32


 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 33


 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 34


 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 35


 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 36


 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 37


 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 722              		.loc 2 960 27 view .LVU161
 723              	.LBB23:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 724              		.loc 2 962 3 view .LVU162
 725              		.syntax unified
 726              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 727 0000 72B6     		cpsid i
 728              	@ 0 "" 2
 729              		.thumb
 730              		.syntax unified
 731              	.L33:
 732              	.LBE23:
 733              	.LBE22:
 328:Core/Src/main.c ****   while (1)
 734              		.loc 1 328 3 view .LVU163
 329:Core/Src/main.c ****   {
 330:Core/Src/main.c ****   }
 735              		.loc 1 330 3 view .LVU164
 328:Core/Src/main.c ****   while (1)
 736              		.loc 1 328 9 view .LVU165
 737 0002 FEE7     		b	.L33
 738              		.cfi_endproc
 739              	.LFE139:
 741              		.section	.text.SystemClock_Config,"ax",%progbits
 742              		.align	1
 743              		.global	SystemClock_Config
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 748              	SystemClock_Config:
 749              	.LFB135:
 192:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 750              		.loc 1 192 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 80
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 38


 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754 0000 00B5     		push	{lr}
 755              	.LCFI9:
 756              		.cfi_def_cfa_offset 4
 757              		.cfi_offset 14, -4
 758 0002 95B0     		sub	sp, sp, #84
 759              	.LCFI10:
 760              		.cfi_def_cfa_offset 88
 193:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 761              		.loc 1 193 3 view .LVU167
 193:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 762              		.loc 1 193 22 is_stmt 0 view .LVU168
 763 0004 3422     		movs	r2, #52
 764 0006 0021     		movs	r1, #0
 765 0008 07A8     		add	r0, sp, #28
 766 000a FFF7FEFF 		bl	memset
 767              	.LVL66:
 194:Core/Src/main.c **** 
 768              		.loc 1 194 3 is_stmt 1 view .LVU169
 194:Core/Src/main.c **** 
 769              		.loc 1 194 22 is_stmt 0 view .LVU170
 770 000e 0023     		movs	r3, #0
 771 0010 0293     		str	r3, [sp, #8]
 772 0012 0393     		str	r3, [sp, #12]
 773 0014 0493     		str	r3, [sp, #16]
 774 0016 0593     		str	r3, [sp, #20]
 775 0018 0693     		str	r3, [sp, #24]
 198:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 776              		.loc 1 198 3 is_stmt 1 view .LVU171
 777              	.LBB24:
 198:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 778              		.loc 1 198 3 view .LVU172
 779 001a 0093     		str	r3, [sp]
 198:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 780              		.loc 1 198 3 view .LVU173
 781 001c 214A     		ldr	r2, .L40
 782 001e 116C     		ldr	r1, [r2, #64]
 783 0020 41F08051 		orr	r1, r1, #268435456
 784 0024 1164     		str	r1, [r2, #64]
 198:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 785              		.loc 1 198 3 view .LVU174
 786 0026 126C     		ldr	r2, [r2, #64]
 787 0028 02F08052 		and	r2, r2, #268435456
 788 002c 0092     		str	r2, [sp]
 198:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 789              		.loc 1 198 3 view .LVU175
 790 002e 009A     		ldr	r2, [sp]
 791              	.LBE24:
 198:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 792              		.loc 1 198 3 view .LVU176
 199:Core/Src/main.c **** 
 793              		.loc 1 199 3 view .LVU177
 794              	.LBB25:
 199:Core/Src/main.c **** 
 795              		.loc 1 199 3 view .LVU178
 796 0030 0193     		str	r3, [sp, #4]
 199:Core/Src/main.c **** 
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 39


 797              		.loc 1 199 3 view .LVU179
 798 0032 1D4A     		ldr	r2, .L40+4
 799 0034 1368     		ldr	r3, [r2]
 800 0036 23F44043 		bic	r3, r3, #49152
 801 003a 43F48043 		orr	r3, r3, #16384
 802 003e 1360     		str	r3, [r2]
 199:Core/Src/main.c **** 
 803              		.loc 1 199 3 view .LVU180
 804 0040 1368     		ldr	r3, [r2]
 805 0042 03F44043 		and	r3, r3, #49152
 806 0046 0193     		str	r3, [sp, #4]
 199:Core/Src/main.c **** 
 807              		.loc 1 199 3 view .LVU181
 808 0048 019B     		ldr	r3, [sp, #4]
 809              	.LBE25:
 199:Core/Src/main.c **** 
 810              		.loc 1 199 3 view .LVU182
 204:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 811              		.loc 1 204 3 view .LVU183
 204:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 812              		.loc 1 204 36 is_stmt 0 view .LVU184
 813 004a 0123     		movs	r3, #1
 814 004c 0793     		str	r3, [sp, #28]
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 815              		.loc 1 205 3 is_stmt 1 view .LVU185
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 816              		.loc 1 205 30 is_stmt 0 view .LVU186
 817 004e 4FF48033 		mov	r3, #65536
 818 0052 0893     		str	r3, [sp, #32]
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 819              		.loc 1 206 3 is_stmt 1 view .LVU187
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 820              		.loc 1 206 34 is_stmt 0 view .LVU188
 821 0054 0223     		movs	r3, #2
 822 0056 0D93     		str	r3, [sp, #52]
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 823              		.loc 1 207 3 is_stmt 1 view .LVU189
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 824              		.loc 1 207 35 is_stmt 0 view .LVU190
 825 0058 4FF48002 		mov	r2, #4194304
 826 005c 0E92     		str	r2, [sp, #56]
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 827              		.loc 1 208 3 is_stmt 1 view .LVU191
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 828              		.loc 1 208 30 is_stmt 0 view .LVU192
 829 005e 0F22     		movs	r2, #15
 830 0060 0F92     		str	r2, [sp, #60]
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 831              		.loc 1 209 3 is_stmt 1 view .LVU193
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 832              		.loc 1 209 30 is_stmt 0 view .LVU194
 833 0062 9022     		movs	r2, #144
 834 0064 1092     		str	r2, [sp, #64]
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 835              		.loc 1 210 3 is_stmt 1 view .LVU195
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 836              		.loc 1 210 30 is_stmt 0 view .LVU196
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 40


 837 0066 1193     		str	r3, [sp, #68]
 211:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 838              		.loc 1 211 3 is_stmt 1 view .LVU197
 211:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 839              		.loc 1 211 30 is_stmt 0 view .LVU198
 840 0068 1293     		str	r3, [sp, #72]
 212:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 841              		.loc 1 212 3 is_stmt 1 view .LVU199
 212:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 842              		.loc 1 212 30 is_stmt 0 view .LVU200
 843 006a 1393     		str	r3, [sp, #76]
 213:Core/Src/main.c ****   {
 844              		.loc 1 213 3 is_stmt 1 view .LVU201
 213:Core/Src/main.c ****   {
 845              		.loc 1 213 7 is_stmt 0 view .LVU202
 846 006c 07A8     		add	r0, sp, #28
 847 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 848              	.LVL67:
 213:Core/Src/main.c ****   {
 849              		.loc 1 213 6 discriminator 1 view .LVU203
 850 0072 98B9     		cbnz	r0, .L38
 220:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 851              		.loc 1 220 3 is_stmt 1 view .LVU204
 220:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 852              		.loc 1 220 31 is_stmt 0 view .LVU205
 853 0074 0F23     		movs	r3, #15
 854 0076 0293     		str	r3, [sp, #8]
 222:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 855              		.loc 1 222 3 is_stmt 1 view .LVU206
 222:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 856              		.loc 1 222 34 is_stmt 0 view .LVU207
 857 0078 0223     		movs	r3, #2
 858 007a 0393     		str	r3, [sp, #12]
 223:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 859              		.loc 1 223 3 is_stmt 1 view .LVU208
 223:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 860              		.loc 1 223 35 is_stmt 0 view .LVU209
 861 007c 0023     		movs	r3, #0
 862 007e 0493     		str	r3, [sp, #16]
 224:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 863              		.loc 1 224 3 is_stmt 1 view .LVU210
 224:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 864              		.loc 1 224 36 is_stmt 0 view .LVU211
 865 0080 4FF4A053 		mov	r3, #5120
 866 0084 0593     		str	r3, [sp, #20]
 225:Core/Src/main.c **** 
 867              		.loc 1 225 3 is_stmt 1 view .LVU212
 225:Core/Src/main.c **** 
 868              		.loc 1 225 36 is_stmt 0 view .LVU213
 869 0086 4FF48053 		mov	r3, #4096
 870 008a 0693     		str	r3, [sp, #24]
 227:Core/Src/main.c ****   {
 871              		.loc 1 227 3 is_stmt 1 view .LVU214
 227:Core/Src/main.c ****   {
 872              		.loc 1 227 7 is_stmt 0 view .LVU215
 873 008c 0321     		movs	r1, #3
 874 008e 02A8     		add	r0, sp, #8
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 41


 875 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 876              	.LVL68:
 227:Core/Src/main.c ****   {
 877              		.loc 1 227 6 discriminator 1 view .LVU216
 878 0094 20B9     		cbnz	r0, .L39
 231:Core/Src/main.c **** 
 879              		.loc 1 231 1 view .LVU217
 880 0096 15B0     		add	sp, sp, #84
 881              	.LCFI11:
 882              		.cfi_remember_state
 883              		.cfi_def_cfa_offset 4
 884              		@ sp needed
 885 0098 5DF804FB 		ldr	pc, [sp], #4
 886              	.L38:
 887              	.LCFI12:
 888              		.cfi_restore_state
 215:Core/Src/main.c ****   }
 889              		.loc 1 215 5 is_stmt 1 view .LVU218
 890 009c FFF7FEFF 		bl	Error_Handler
 891              	.LVL69:
 892              	.L39:
 229:Core/Src/main.c ****   }
 893              		.loc 1 229 5 view .LVU219
 894 00a0 FFF7FEFF 		bl	Error_Handler
 895              	.LVL70:
 896              	.L41:
 897              		.align	2
 898              	.L40:
 899 00a4 00380240 		.word	1073887232
 900 00a8 00700040 		.word	1073770496
 901              		.cfi_endproc
 902              	.LFE135:
 904              		.section	.text.main,"ax",%progbits
 905              		.align	1
 906              		.global	main
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 911              	main:
 912              	.LFB134:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 913              		.loc 1 100 1 view -0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 918              	.LCFI13:
 919              		.cfi_def_cfa_offset 40
 920              		.cfi_offset 3, -40
 921              		.cfi_offset 4, -36
 922              		.cfi_offset 5, -32
 923              		.cfi_offset 6, -28
 924              		.cfi_offset 7, -24
 925              		.cfi_offset 8, -20
 926              		.cfi_offset 9, -16
 927              		.cfi_offset 10, -12
 928              		.cfi_offset 11, -8
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 42


 929              		.cfi_offset 14, -4
 108:Core/Src/main.c **** 
 930              		.loc 1 108 3 view .LVU221
 931 0004 FFF7FEFF 		bl	HAL_Init
 932              	.LVL71:
 115:Core/Src/main.c **** 
 933              		.loc 1 115 3 view .LVU222
 934 0008 FFF7FEFF 		bl	SystemClock_Config
 935              	.LVL72:
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 936              		.loc 1 122 3 view .LVU223
 937 000c FFF7FEFF 		bl	MX_GPIO_Init
 938              	.LVL73:
 939 0010 16E0     		b	.L43
 940              	.LVL74:
 941              	.L48:
 942              	.LBB26:
 172:Core/Src/main.c **** 
 943              		.loc 1 172 7 view .LVU224
 944 0012 474C     		ldr	r4, .L49
 945              	.LVL75:
 172:Core/Src/main.c **** 
 946              		.loc 1 172 7 is_stmt 0 view .LVU225
 947 0014 0122     		movs	r2, #1
 948 0016 0221     		movs	r1, #2
 949 0018 2046     		mov	r0, r4
 950 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 951              	.LVL76:
 175:Core/Src/main.c **** 
 952              		.loc 1 175 7 is_stmt 1 view .LVU226
 953 001e 4FF4FA60 		mov	r0, #2000
 954 0022 FFF7FEFF 		bl	HAL_Delay
 955              	.LVL77:
 178:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 956              		.loc 1 178 7 view .LVU227
 957 0026 0022     		movs	r2, #0
 958 0028 0121     		movs	r1, #1
 959 002a 2046     		mov	r0, r4
 960 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 961              	.LVL78:
 179:Core/Src/main.c **** 
 962              		.loc 1 179 7 view .LVU228
 963 0030 0022     		movs	r2, #0
 964 0032 0221     		movs	r1, #2
 965 0034 2046     		mov	r0, r4
 966 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 967              	.LVL79:
 181:Core/Src/main.c ****     }
 968              		.loc 1 181 7 view .LVU229
 181:Core/Src/main.c ****     }
 969              		.loc 1 181 12 is_stmt 0 view .LVU230
 970 003a 3E4B     		ldr	r3, .L49+4
 971 003c 0122     		movs	r2, #1
 972 003e 1A70     		strb	r2, [r3]
 973              	.LVL80:
 974              	.L43:
 181:Core/Src/main.c ****     }
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 43


 975              		.loc 1 181 12 view .LVU231
 976              	.LBE26:
 129:Core/Src/main.c ****   {
 977              		.loc 1 129 3 is_stmt 1 view .LVU232
 978              	.LBB28:
 134:Core/Src/main.c ****     if (!done){
 979              		.loc 1 134 5 view .LVU233
 135:Core/Src/main.c ****       // Visual indicator: Turn on LED0 to signal processing start
 980              		.loc 1 135 5 view .LVU234
 135:Core/Src/main.c ****       // Visual indicator: Turn on LED0 to signal processing start
 981              		.loc 1 135 9 is_stmt 0 view .LVU235
 982 0040 3C4B     		ldr	r3, .L49+4
 983 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 135:Core/Src/main.c ****       // Visual indicator: Turn on LED0 to signal processing start
 984              		.loc 1 135 8 view .LVU236
 985 0044 002B     		cmp	r3, #0
 986 0046 FBD1     		bne	.L43
 137:Core/Src/main.c **** 
 987              		.loc 1 137 7 is_stmt 1 view .LVU237
 988 0048 0122     		movs	r2, #1
 989 004a 1146     		mov	r1, r2
 990 004c 3848     		ldr	r0, .L49
 991 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 992              	.LVL81:
 140:Core/Src/main.c ****         current_width = test_sizes[i][0];
 993              		.loc 1 140 7 view .LVU238
 994              	.LBB27:
 140:Core/Src/main.c ****         current_width = test_sizes[i][0];
 995              		.loc 1 140 12 view .LVU239
 140:Core/Src/main.c ****         current_width = test_sizes[i][0];
 996              		.loc 1 140 16 is_stmt 0 view .LVU240
 997 0052 0024     		movs	r4, #0
 998              	.LVL82:
 999              	.L44:
 140:Core/Src/main.c ****         current_width = test_sizes[i][0];
 1000              		.loc 1 140 25 is_stmt 1 discriminator 1 view .LVU241
 1001 0054 042C     		cmp	r4, #4
 1002 0056 DCDC     		bgt	.L48
 141:Core/Src/main.c ****         current_height = test_sizes[i][1];
 1003              		.loc 1 141 9 view .LVU242
 141:Core/Src/main.c ****         current_height = test_sizes[i][1];
 1004              		.loc 1 141 38 is_stmt 0 view .LVU243
 1005 0058 374B     		ldr	r3, .L49+8
 1006 005a 33F82420 		ldrh	r2, [r3, r4, lsl #2]
 141:Core/Src/main.c ****         current_height = test_sizes[i][1];
 1007              		.loc 1 141 23 view .LVU244
 1008 005e 374E     		ldr	r6, .L49+12
 1009 0060 3280     		strh	r2, [r6]	@ movhi
 142:Core/Src/main.c ****         
 1010              		.loc 1 142 9 is_stmt 1 view .LVU245
 142:Core/Src/main.c ****         
 1011              		.loc 1 142 39 is_stmt 0 view .LVU246
 1012 0062 03EB8403 		add	r3, r3, r4, lsl #2
 1013 0066 5B88     		ldrh	r3, [r3, #2]
 142:Core/Src/main.c ****         
 1014              		.loc 1 142 24 view .LVU247
 1015 0068 354D     		ldr	r5, .L49+16
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 44


 1016 006a 2B80     		strh	r3, [r5]	@ movhi
 145:Core/Src/main.c ****         checksum_fixed = calculate_mandelbrot_fixed_point_arithmetic(current_width, current_height,
 1017              		.loc 1 145 9 is_stmt 1 view .LVU248
 145:Core/Src/main.c ****         checksum_fixed = calculate_mandelbrot_fixed_point_arithmetic(current_width, current_height,
 1018              		.loc 1 145 22 is_stmt 0 view .LVU249
 1019 006c FFF7FEFF 		bl	HAL_GetTick
 1020              	.LVL83:
 145:Core/Src/main.c ****         checksum_fixed = calculate_mandelbrot_fixed_point_arithmetic(current_width, current_height,
 1021              		.loc 1 145 20 discriminator 1 view .LVU250
 1022 0070 DFF8E880 		ldr	r8, .L49+44
 1023 0074 C8F80000 		str	r0, [r8]
 146:Core/Src/main.c ****         end_time = HAL_GetTick();
 1024              		.loc 1 146 9 is_stmt 1 view .LVU251
 146:Core/Src/main.c ****         end_time = HAL_GetTick();
 1025              		.loc 1 146 26 is_stmt 0 view .LVU252
 1026 0078 3088     		ldrh	r0, [r6]
 1027 007a 2988     		ldrh	r1, [r5]
 1028 007c 6422     		movs	r2, #100
 1029 007e 89B2     		uxth	r1, r1
 1030 0080 80B2     		uxth	r0, r0
 1031 0082 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1032              	.LVL84:
 146:Core/Src/main.c ****         end_time = HAL_GetTick();
 1033              		.loc 1 146 24 discriminator 1 view .LVU253
 1034 0086 2F4F     		ldr	r7, .L49+20
 1035 0088 C7E90001 		strd	r0, [r7]
 147:Core/Src/main.c ****         exec_time_fixed = end_time - start_time;
 1036              		.loc 1 147 9 is_stmt 1 view .LVU254
 147:Core/Src/main.c ****         exec_time_fixed = end_time - start_time;
 1037              		.loc 1 147 20 is_stmt 0 view .LVU255
 1038 008c FFF7FEFF 		bl	HAL_GetTick
 1039              	.LVL85:
 147:Core/Src/main.c ****         exec_time_fixed = end_time - start_time;
 1040              		.loc 1 147 18 discriminator 1 view .LVU256
 1041 0090 DFF8CC90 		ldr	r9, .L49+48
 1042 0094 C9F80000 		str	r0, [r9]
 148:Core/Src/main.c ****         
 1043              		.loc 1 148 9 is_stmt 1 view .LVU257
 148:Core/Src/main.c ****         
 1044              		.loc 1 148 36 is_stmt 0 view .LVU258
 1045 0098 D9F80030 		ldr	r3, [r9]
 1046 009c D8F80020 		ldr	r2, [r8]
 1047 00a0 9B1A     		subs	r3, r3, r2
 148:Core/Src/main.c ****         
 1048              		.loc 1 148 25 view .LVU259
 1049 00a2 2949     		ldr	r1, .L49+24
 1050 00a4 0B60     		str	r3, [r1]
 150:Core/Src/main.c ****         task1_fixed[i].height = current_height;
 1051              		.loc 1 150 9 is_stmt 1 view .LVU260
 150:Core/Src/main.c ****         task1_fixed[i].height = current_height;
 1052              		.loc 1 150 30 is_stmt 0 view .LVU261
 1053 00a6 3288     		ldrh	r2, [r6]
 1054 00a8 92B2     		uxth	r2, r2
 1055 00aa 2848     		ldr	r0, .L49+28
 1056 00ac 4FEA041A 		lsl	r10, r4, #4
 1057 00b0 00EB0413 		add	r3, r0, r4, lsl #4
 1058 00b4 20F80A20 		strh	r2, [r0, r10]	@ movhi
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 45


 151:Core/Src/main.c ****         task1_fixed[i].exec_time_ms = exec_time_fixed;
 1059              		.loc 1 151 9 is_stmt 1 view .LVU262
 151:Core/Src/main.c ****         task1_fixed[i].exec_time_ms = exec_time_fixed;
 1060              		.loc 1 151 31 is_stmt 0 view .LVU263
 1061 00b8 2A88     		ldrh	r2, [r5]
 1062 00ba 92B2     		uxth	r2, r2
 1063 00bc 5A80     		strh	r2, [r3, #2]	@ movhi
 152:Core/Src/main.c ****         task1_fixed[i].checksum = checksum_fixed;
 1064              		.loc 1 152 9 is_stmt 1 view .LVU264
 152:Core/Src/main.c ****         task1_fixed[i].checksum = checksum_fixed;
 1065              		.loc 1 152 37 is_stmt 0 view .LVU265
 1066 00be 0A68     		ldr	r2, [r1]
 1067 00c0 5A60     		str	r2, [r3, #4]
 153:Core/Src/main.c ****         
 1068              		.loc 1 153 9 is_stmt 1 view .LVU266
 153:Core/Src/main.c ****         
 1069              		.loc 1 153 33 is_stmt 0 view .LVU267
 1070 00c2 D7E90001 		ldrd	r0, [r7]
 1071 00c6 C3E90201 		strd	r0, [r3, #8]
 155:Core/Src/main.c ****         
 1072              		.loc 1 155 9 is_stmt 1 view .LVU268
 155:Core/Src/main.c ****         
 1073              		.loc 1 155 17 is_stmt 0 view .LVU269
 1074 00ca 214F     		ldr	r7, .L49+32
 1075 00cc 3B68     		ldr	r3, [r7]
 1076 00ce 0133     		adds	r3, r3, #1
 1077 00d0 3B60     		str	r3, [r7]
 158:Core/Src/main.c ****         checksum_double = calculate_mandelbrot_double(current_width, current_height, MAX_ITER);
 1078              		.loc 1 158 9 is_stmt 1 view .LVU270
 158:Core/Src/main.c ****         checksum_double = calculate_mandelbrot_double(current_width, current_height, MAX_ITER);
 1079              		.loc 1 158 22 is_stmt 0 view .LVU271
 1080 00d2 FFF7FEFF 		bl	HAL_GetTick
 1081              	.LVL86:
 158:Core/Src/main.c ****         checksum_double = calculate_mandelbrot_double(current_width, current_height, MAX_ITER);
 1082              		.loc 1 158 20 discriminator 1 view .LVU272
 1083 00d6 C8F80000 		str	r0, [r8]
 159:Core/Src/main.c ****         end_time = HAL_GetTick();
 1084              		.loc 1 159 9 is_stmt 1 view .LVU273
 159:Core/Src/main.c ****         end_time = HAL_GetTick();
 1085              		.loc 1 159 27 is_stmt 0 view .LVU274
 1086 00da 3088     		ldrh	r0, [r6]
 1087 00dc 2988     		ldrh	r1, [r5]
 1088 00de 6422     		movs	r2, #100
 1089 00e0 89B2     		uxth	r1, r1
 1090 00e2 80B2     		uxth	r0, r0
 1091 00e4 FFF7FEFF 		bl	calculate_mandelbrot_double
 1092              	.LVL87:
 159:Core/Src/main.c ****         end_time = HAL_GetTick();
 1093              		.loc 1 159 25 discriminator 1 view .LVU275
 1094 00e8 DFF878B0 		ldr	fp, .L49+52
 1095 00ec CBE90001 		strd	r0, [fp]
 160:Core/Src/main.c ****         exec_time_double = end_time - start_time;
 1096              		.loc 1 160 9 is_stmt 1 view .LVU276
 160:Core/Src/main.c ****         exec_time_double = end_time - start_time;
 1097              		.loc 1 160 20 is_stmt 0 view .LVU277
 1098 00f0 FFF7FEFF 		bl	HAL_GetTick
 1099              	.LVL88:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 46


 160:Core/Src/main.c ****         exec_time_double = end_time - start_time;
 1100              		.loc 1 160 18 discriminator 1 view .LVU278
 1101 00f4 C9F80000 		str	r0, [r9]
 161:Core/Src/main.c ****         
 1102              		.loc 1 161 9 is_stmt 1 view .LVU279
 161:Core/Src/main.c ****         
 1103              		.loc 1 161 37 is_stmt 0 view .LVU280
 1104 00f8 D9F80030 		ldr	r3, [r9]
 1105 00fc D8F80020 		ldr	r2, [r8]
 1106 0100 9B1A     		subs	r3, r3, r2
 161:Core/Src/main.c ****         
 1107              		.loc 1 161 26 view .LVU281
 1108 0102 1449     		ldr	r1, .L49+36
 1109 0104 0B60     		str	r3, [r1]
 163:Core/Src/main.c ****         task1_double[i].height = current_height;
 1110              		.loc 1 163 9 is_stmt 1 view .LVU282
 163:Core/Src/main.c ****         task1_double[i].height = current_height;
 1111              		.loc 1 163 31 is_stmt 0 view .LVU283
 1112 0106 3288     		ldrh	r2, [r6]
 1113 0108 92B2     		uxth	r2, r2
 1114 010a 1348     		ldr	r0, .L49+40
 1115 010c 00EB0A03 		add	r3, r0, r10
 1116 0110 20F80A20 		strh	r2, [r0, r10]	@ movhi
 164:Core/Src/main.c ****         task1_double[i].exec_time_ms = exec_time_double;
 1117              		.loc 1 164 9 is_stmt 1 view .LVU284
 164:Core/Src/main.c ****         task1_double[i].exec_time_ms = exec_time_double;
 1118              		.loc 1 164 32 is_stmt 0 view .LVU285
 1119 0114 2A88     		ldrh	r2, [r5]
 1120 0116 92B2     		uxth	r2, r2
 1121 0118 5A80     		strh	r2, [r3, #2]	@ movhi
 165:Core/Src/main.c ****         task1_double[i].checksum = checksum_double;
 1122              		.loc 1 165 9 is_stmt 1 view .LVU286
 165:Core/Src/main.c ****         task1_double[i].checksum = checksum_double;
 1123              		.loc 1 165 38 is_stmt 0 view .LVU287
 1124 011a 0A68     		ldr	r2, [r1]
 1125 011c 5A60     		str	r2, [r3, #4]
 166:Core/Src/main.c ****         
 1126              		.loc 1 166 9 is_stmt 1 view .LVU288
 166:Core/Src/main.c ****         
 1127              		.loc 1 166 34 is_stmt 0 view .LVU289
 1128 011e DBE90001 		ldrd	r0, [fp]
 1129 0122 C3E90201 		strd	r0, [r3, #8]
 168:Core/Src/main.c ****       }
 1130              		.loc 1 168 9 is_stmt 1 view .LVU290
 168:Core/Src/main.c ****       }
 1131              		.loc 1 168 17 is_stmt 0 view .LVU291
 1132 0126 3B68     		ldr	r3, [r7]
 1133 0128 0133     		adds	r3, r3, #1
 1134 012a 3B60     		str	r3, [r7]
 140:Core/Src/main.c ****         current_width = test_sizes[i][0];
 1135              		.loc 1 140 31 is_stmt 1 discriminator 3 view .LVU292
 1136 012c 0134     		adds	r4, r4, #1
 1137              	.LVL89:
 140:Core/Src/main.c ****         current_width = test_sizes[i][0];
 1138              		.loc 1 140 31 is_stmt 0 discriminator 3 view .LVU293
 1139 012e 91E7     		b	.L44
 1140              	.L50:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 47


 1141              		.align	2
 1142              	.L49:
 1143 0130 00040240 		.word	1073873920
 1144 0134 00000000 		.word	done.0
 1145 0138 00000000 		.word	test_sizes
 1146 013c 00000000 		.word	current_width
 1147 0140 00000000 		.word	current_height
 1148 0144 00000000 		.word	checksum_fixed
 1149 0148 00000000 		.word	exec_time_fixed
 1150 014c 00000000 		.word	task1_fixed
 1151 0150 00000000 		.word	progress
 1152 0154 00000000 		.word	exec_time_double
 1153 0158 00000000 		.word	task1_double
 1154 015c 00000000 		.word	start_time
 1155 0160 00000000 		.word	end_time
 1156 0164 00000000 		.word	checksum_double
 1157              	.LBE27:
 1158              	.LBE28:
 1159              		.cfi_endproc
 1160              	.LFE134:
 1162              		.section	.bss.done.0,"aw",%nobits
 1165              	done.0:
 1166 0000 00       		.space	1
 1167              		.global	progress
 1168              		.section	.bss.progress,"aw",%nobits
 1169              		.align	2
 1172              	progress:
 1173 0000 00000000 		.space	4
 1174              		.global	current_exec_time
 1175              		.section	.bss.current_exec_time,"aw",%nobits
 1176              		.align	2
 1179              	current_exec_time:
 1180 0000 00000000 		.space	4
 1181              		.global	current_checksum
 1182              		.section	.bss.current_checksum,"aw",%nobits
 1183              		.align	3
 1186              	current_checksum:
 1187 0000 00000000 		.space	8
 1187      00000000 
 1188              		.global	exec_time_double
 1189              		.section	.bss.exec_time_double,"aw",%nobits
 1190              		.align	2
 1193              	exec_time_double:
 1194 0000 00000000 		.space	4
 1195              		.global	checksum_double
 1196              		.section	.bss.checksum_double,"aw",%nobits
 1197              		.align	3
 1200              	checksum_double:
 1201 0000 00000000 		.space	8
 1201      00000000 
 1202              		.global	exec_time_fixed
 1203              		.section	.bss.exec_time_fixed,"aw",%nobits
 1204              		.align	2
 1207              	exec_time_fixed:
 1208 0000 00000000 		.space	4
 1209              		.global	checksum_fixed
 1210              		.section	.bss.checksum_fixed,"aw",%nobits
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 48


 1211              		.align	3
 1214              	checksum_fixed:
 1215 0000 00000000 		.space	8
 1215      00000000 
 1216              		.global	current_height
 1217              		.section	.bss.current_height,"aw",%nobits
 1218              		.align	1
 1221              	current_height:
 1222 0000 0000     		.space	2
 1223              		.global	current_width
 1224              		.section	.bss.current_width,"aw",%nobits
 1225              		.align	1
 1228              	current_width:
 1229 0000 0000     		.space	2
 1230              		.global	end_time
 1231              		.section	.bss.end_time,"aw",%nobits
 1232              		.align	2
 1235              	end_time:
 1236 0000 00000000 		.space	4
 1237              		.global	start_time
 1238              		.section	.bss.start_time,"aw",%nobits
 1239              		.align	2
 1242              	start_time:
 1243 0000 00000000 		.space	4
 1244              		.global	task1_double
 1245              		.section	.bss.task1_double,"aw",%nobits
 1246              		.align	3
 1249              	task1_double:
 1250 0000 00000000 		.space	80
 1250      00000000 
 1250      00000000 
 1250      00000000 
 1250      00000000 
 1251              		.global	task1_fixed
 1252              		.section	.bss.task1_fixed,"aw",%nobits
 1253              		.align	3
 1256              	task1_fixed:
 1257 0000 00000000 		.space	80
 1257      00000000 
 1257      00000000 
 1257      00000000 
 1257      00000000 
 1258              		.section	.rodata.test_sizes,"a"
 1259              		.align	2
 1262              	test_sizes:
 1263 0000 8000     		.short	128
 1264 0002 8000     		.short	128
 1265 0004 A000     		.short	160
 1266 0006 A000     		.short	160
 1267 0008 C000     		.short	192
 1268 000a C000     		.short	192
 1269 000c E000     		.short	224
 1270 000e E000     		.short	224
 1271 0010 0001     		.short	256
 1272 0012 0001     		.short	256
 1273              		.text
 1274              	.Letext0:
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 49


 1275              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1276              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1277              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1278              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1279              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1280              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1281              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1282              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1283              		.file 11 "<built-in>"
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 50


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:133    .text.MX_GPIO_Init:00000074 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:140    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:146    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:405    .text.calculate_mandelbrot_fixed_point_arithmetic:00000150 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:419    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:425    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:696    .text.calculate_mandelbrot_double:00000158 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:704    .text.Error_Handler:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:710    .text.Error_Handler:00000000 Error_Handler
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:742    .text.SystemClock_Config:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:748    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:899    .text.SystemClock_Config:000000a4 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:905    .text.main:00000000 $t
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:911    .text.main:00000000 main
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1143   .text.main:00000130 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1165   .bss.done.0:00000000 done.0
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1262   .rodata.test_sizes:00000000 test_sizes
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1228   .bss.current_width:00000000 current_width
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1221   .bss.current_height:00000000 current_height
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1214   .bss.checksum_fixed:00000000 checksum_fixed
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1207   .bss.exec_time_fixed:00000000 exec_time_fixed
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1256   .bss.task1_fixed:00000000 task1_fixed
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1172   .bss.progress:00000000 progress
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1193   .bss.exec_time_double:00000000 exec_time_double
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1249   .bss.task1_double:00000000 task1_double
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1242   .bss.start_time:00000000 start_time
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1235   .bss.end_time:00000000 end_time
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1200   .bss.checksum_double:00000000 checksum_double
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1166   .bss.done.0:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1169   .bss.progress:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1179   .bss.current_exec_time:00000000 current_exec_time
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1176   .bss.current_exec_time:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1186   .bss.current_checksum:00000000 current_checksum
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1183   .bss.current_checksum:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1190   .bss.exec_time_double:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1197   .bss.checksum_double:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1204   .bss.exec_time_fixed:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1211   .bss.checksum_fixed:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1218   .bss.current_height:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1225   .bss.current_width:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1232   .bss.end_time:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1239   .bss.start_time:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1246   .bss.task1_double:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1253   .bss.task1_fixed:00000000 $d
C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s:1259   .rodata.test_sizes:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
ARM GAS  C:\Users\BANELE~1\AppData\Local\Temp\cczlgSMa.s 			page 51


__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
HAL_GetTick
